services:
  db:
    container_name: app_db
    # restart: always
    image: postgres:latest
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5431:5432"
    env_file:
      - ./secrets/db/.env

  frontend:
    container_name: app_frontend
    stdin_open: true
    tty: true
    ports:
      - "8080:8080"
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
      args:
        HTTP_PORT: 8080
    develop:
      watch:
        - action: sync
          path: ./src/frontend
          target: /app/src/frontend
        - action: sync+restart
          path: ./src/frontend/package.json
          target: /app/src/frontend/package.json
      env_file:
        - ./secrets/frontend/.env

  api_gateway:
    container_name: api_gateway
    depends_on:
      - db
    stdin_open: true
    tty: true
    ports:
      - "8200:8200"
    build:
      context: ./src/backend/gateway
      dockerfile: Dockerfile.dev
      args:
        HTTP_PORT: 8200
    develop:
      watch:
        - action: sync+restart
          path: ./src/backend/gateway
          target: /app/src/backend/
        # - action: rebuild
        #   path: ./src/backend/go.mod
    env_file:
      - ./secrets/backend/.env_gateway

  api_service_1:
    container_name: api_service_1
    depends_on:
      - db
    stdin_open: true
    tty: true
    ports:
      - "8201:8200"
    build:
      context: ./src/backend/service_1
      dockerfile: Dockerfile.dev
      args:
        HTTP_PORT: 8200
    develop:
      watch:
        - action: sync+restart
          path: ./src/backend/service_1
          target: /app/src/backend/
    env_file:
      - ./secrets/backend/.env_service_1

  mail:
    container_name: app_mail
    image: mailhog/mailhog:latest
    # restart: always
    ports:
      - "1025:1025"
      - "8025:8025"

  redis:
    container_name: app_redis
    image: redis:latest
    # restart: always
    ports:
      - "6379:6379"
